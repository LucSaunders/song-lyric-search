{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","style","color","Context","React","createContext","ContextController","_ref","children","_useState","useState","track_list","heading","_useState2","Object","slicedToArray","state","setState","useEffect","axios","get","concat","process","then","response","data","message","body","catch","error","console","log","Provider","value","Spinner","src","spinner","alt","width","margin","display","Track","props","track","artist_name","track_name","album_name","react_router_dom","to","track_id","Tracks","_useContext","useContext","undefined","length","Fragment","map","item","tracks_Track","key","Search","_useContext2","userInput","setUserInput","_useState3","_useState4","trackTitle","setTrackTitle","onSubmit","e","preventDefault","type","placeholder","name","onChange","target","Index","tracks_Search","tracks_Tracks","Lyrics","setTrack","lyrics","setLyrics","match","params","id","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","dist_default","format","first_release_date","App","layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd75fef5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.b9711227.gif\";","import React from 'react';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n      <i\r\n        className=\"navbar-brand mb-0 h1 mx-left far fa-play-circle\"\r\n        style={{ color: '#df691a' }}\r\n      >\r\n        {' '}\r\n        <span style={{ color: 'white' }}> Lyrica</span>\r\n      </i>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport function ContextController({ children }) {\r\n  let intialState = {\r\n    track_list: [],\r\n    heading: ''\r\n  };\r\n\r\n  const [state, setState] = useState(intialState);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${\r\n          process.env.REACT_APP_MM_KEY\r\n        }`\r\n      )\r\n      .then(response => {\r\n        setState({\r\n          track_list: response.data.message.body.track_list,\r\n          heading: 'Top 10 Tracks'\r\n        });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading...\"\r\n        style={{ width: '200px', margin: ' 40px auto', display: 'block' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Track = props => {\r\n  const { track } = props;\r\n\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n          <h5>{track.artist_name}</h5>\r\n          <p className=\"card-text\">\r\n            <strong>\r\n              <i className=\"fas fa-play\" style={{ color: '#df691a' }} /> Track\r\n            </strong>\r\n            : {track.track_name}\r\n            <br />\r\n            <strong>\r\n              <i className=\"fas fa-compact-disc\" /> Album\r\n            </strong>\r\n            : {track.album_name}\r\n          </p>\r\n          <Link\r\n            to={`lyrics/track/${track.track_id}`}\r\n            className=\"btn btn-light btn-block\"\r\n          >\r\n            <i className=\"fas fa-chevron-right text-dark\"> View Lyrics</i>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React, { useContext } from 'react';\r\nimport { Context } from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from './Track';\r\n\r\nconst Tracks = () => {\r\n  const [state] = useContext(Context);\r\n  const { track_list, heading } = state;\r\n\r\n  if (track_list === undefined || track_list.length === 0) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <h3 className=\"text-center mb-4\">{heading}</h3>\r\n        <div className=\"row\">\r\n          {track_list.map(item => (\r\n            <Track key={item.track.track_id} track={item.track} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Tracks;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { Context } from '../../context';\r\n\r\nconst Search = () => {\r\n  const [state, setState] = useContext(Context);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [trackTitle, setTrackTitle] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${\r\n          process.env.REACT_APP_MM_KEY\r\n        }`\r\n      )\r\n      .then(response => {\r\n        let track_list = response.data.message.body.track_list;\r\n        setState({ track_list: track_list, heading: 'Search Results' });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, [setState, trackTitle]);\r\n\r\n  const findTrack = e => {\r\n    e.preventDefault();\r\n    setTrackTitle(userInput);\r\n  };\r\n\r\n  const onChange = e => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-body mb-4 p-4\">\r\n      <h3 className=\"display-4 text-center\">Search for a Song</h3>\r\n      <p className=\"lead text-center\">Get the lyrics to any song</p>\r\n      <form onSubmit={findTrack}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-lg\"\r\n            placeholder=\"Enter song title...\"\r\n            name=\"userInput\"\r\n            value={userInput}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">\r\n          Find Lyrics\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n\r\nconst Index = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <Tracks />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport Moment from 'react-moment';\r\n\r\nconst Lyrics = props => {\r\n  const [track, setTrack] = useState({});\r\n  const [lyrics, setLyrics] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${\r\n          props.match.params.id\r\n        }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n      )\r\n      .then(response => {\r\n        let lyrics = response.data.message.body.lyrics;\r\n        setLyrics({ lyrics });\r\n\r\n        return axios.get(\r\n          `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.get?track_id=${\r\n            props.match.params.id\r\n          }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n        );\r\n      })\r\n      .then(response => {\r\n        let track = response.data.message.body.track;\r\n        setTrack({ track });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, [props.match.params.id]);\r\n\r\n  if (\r\n    track === undefined ||\r\n    lyrics === undefined ||\r\n    Object.keys(track).length === 0 ||\r\n    Object.keys(lyrics).length === 0\r\n  ) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Link to=\"/\" className=\"btn btn-primary btn-sm mb-4\">\r\n          Back\r\n        </Link>\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header\" style={{ color: '#66afde' }}>\r\n            {track.track.track_name}{' '}\r\n            <span style={{ color: 'white' }}>\r\n              {' '}\r\n              by {track.track.artist_name}\r\n            </span>\r\n          </h4>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">{lyrics.lyrics.lyrics_body}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <ul className=\"list-group mt-3\">\r\n          <li className=\"list-group-item\">\r\n            <strong>Album ID</strong>: {track.track.album_id}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <strong>Song Genre</strong>:{' '}\r\n            {track.track.primary_genres.music_genre_list.length === 0\r\n              ? 'NO GENRE AVAILABLE'\r\n              : track.track.primary_genres.music_genre_list[0].music_genre\r\n                  .music_genre_name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <strong>Explicit Words</strong>:{' '}\r\n            {track.track.explicit === 0 ? 'No' : 'Yes'}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <strong>Release Date</strong>:{' '}\r\n            <Moment format=\"MM/DD/YYYY\">\r\n              {track.track.first_release_date}\r\n            </Moment>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Lyrics;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\n\nimport './App.css';\n\nimport { ContextController } from './context';\n\nconst App = () => {\n  return (\n    <ContextController>\n      <Router>\n        <>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Index} />\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n            </Switch>\n          </div>\n        </>\n      </Router>\n    </ContextController>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}